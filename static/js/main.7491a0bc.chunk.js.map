{"version":3,"sources":["Components/TodoItems.js","Components/Inputarea.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItems","item","id","handleClick2Delete","onClick","_","Inputarea","addItem","useState","inputText","setInputText","className","onChange","evt","target","value","type","App","items","setItems","prevItems","filter","index","map","todoItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAOeA,MANf,YAAmD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,mBAE5B,OACE,oBAAID,GAAIA,EAAIE,QAAU,SAAAC,GAAC,OAAIF,EAAmBD,IAA9C,SAAoDD,KCoBzCK,MArBf,YAA8B,IAAVC,EAAS,EAATA,QAEpB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,OACE,sBAAKC,UAAU,OAAf,UAEA,uBAAOC,SALY,SAAAC,GAAG,OAAIH,EAAaG,EAAIC,OAAOC,QAKnBC,KAAK,OAAOD,MAAON,IAElD,wBAAQL,QAAU,SAAAC,GAAME,EAAQE,GAAYC,EAAa,KAAzD,SACC,6CCwBYO,MAlCf,WAEE,MAA0BT,mBAAS,IAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAMF,SAAShB,EAAmBD,GAC1BiB,GAAU,SAAAC,GAAS,OACjBA,EAAUC,QAAQ,SAACpB,EAAMqB,GAAP,OAAiBA,IAAUpB,QAO/C,OACE,sBAAKS,UAAU,YAAf,UAEE,qBAAKA,UAAU,UAAf,SACE,8CAEF,cAAC,EAAD,CAAYJ,QAnBhB,SAAiBE,GACnBU,GAAU,SAAAC,GAAS,4BAAQA,GAAR,CAAmBX,UAmBhC,8BACE,6BACGS,EAAMK,KAAK,SAACC,EAAUF,GAAX,OAAqB,cAAC,EAAD,CAAuBpB,GAAIoB,EAAOnB,mBAAoBA,EAAoBF,KAAMuB,GAAhEF,cCnB5CG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7491a0bc.chunk.js","sourcesContent":["\r\nfunction TodoItems({item, id, handleClick2Delete}){\r\n\r\n  return(\r\n    <li id={id} onClick={ _ => handleClick2Delete(id)}>{item}</li>\r\n  );\r\n}\r\nexport default TodoItems\r\n","\r\nimport { useState } from \"react\";\r\n\r\nfunction Inputarea({addItem}){\r\n\r\nconst [inputText, setInputText] = useState(\"\");\r\n\r\nconst handleChange = evt => setInputText(evt.target.value);\r\n\r\nreturn (\r\n  <div className=\"form\">\r\n\r\n  <input onChange={handleChange} type=\"text\" value={inputText} />\r\n\r\n  <button onClick={ _ => {addItem(inputText); setInputText('');}}>\r\n   <span>Add</span>\r\n   </button>\r\n\r\n  </div>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default Inputarea;\r\n","import { useState } from \"react\";\r\nimport TodoItems from './Components/TodoItems';\r\nimport Inputarea from './Components/Inputarea'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  function addItem(inputText) {\r\nsetItems( prevItems => [...prevItems, inputText]);\r\n  }\r\n\r\nfunction handleClick2Delete(id){\r\n  setItems( prevItems =>\r\n    prevItems.filter( (item, index) => index !== id)\r\n  );\r\n}\r\n\r\n//items.splice(evt.target.id, 1);\r\n//setItems([...items]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <div className=\"heading\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n      <Inputarea  addItem={addItem}/>\r\n      <div>\r\n        <ul>\r\n          {items.map( (todoItem, index) => <TodoItems key={index} id={index} handleClick2Delete={handleClick2Delete} item={todoItem}/> )}\r\n        </ul>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}